#!/bin/bash
set -e
echo "Start malware scan on image."

VERSION=${4//./-}
repo_path="proj-so-snapshots"
docker_path="proj-so-snapshots-docker-global"
reportName=${VERSION}
if [[ "$2" == "release" ]]; then
  docker_path="proj-esoa-so-docker-global"
  repo_path="proj-esoa-so"
  reportName=${3}-${VERSION}
fi

HTTP_RESPONSE=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" --insecure -X 'POST' \
 'https://engineering-rnd-malwarescan.internal.ericsson.com/mss/v1.1/malware-scans' \
 -H 'accept: application/json' \
-H 'Authorization: Basic '"${1}"\
 -H 'Content-Type: application/json' \
 -d '{
 "organisation": "BCSSKCSFB",
 "documents": [
   {
     "uri": "https://arm.seli.gic.ericsson.se/artifactory/'${docker_path}'/'${repo_path}'/'${3}'/'${4}'/",
     "reportNameInput": "'${reportName}'",
     "swPackageSize": "10"
   }
 ]
}')

HTTP_BODY=$(echo $HTTP_RESPONSE | sed -E 's/HTTPSTATUS\:[0-9]{3}$//')
HTTP_STATUS=$(echo $HTTP_RESPONSE | tr -d '\n' | sed -E 's/.*HTTPSTATUS:([0-9]{3})$/\1/')
echo $HTTP_BODY
echo $HTTP_STATUS

if [ "$HTTP_STATUS" == "202" ]; then

  request_response_url=$(echo $HTTP_BODY |python3 -c "import sys, json; print(json.load(sys.stdin)['responseUrl'])")

  echo "Malware scan request response url : $request_response_url"

  echo "fetch scan completed response"

  malware_status="IN_PROGRESS"
  get_malware_response() {

    response=$(curl  $request_response_url \
     -H 'accept: application/json' \
     -H 'Authorization: Basic '${1}  \
     -H 'Content-Type: application/json')

    malware_status=$(echo $response | python3 -c "import sys, json; print(json.load(sys.stdin)['status'])")

  }

runtime="8 minute"
endtime=$(date -ud "$runtime" +%s)
  while [[ $(date -u +%s) -le $endtime ]]
  do
    if [ "$malware_status" == "IN_PROGRESS" ]; then
      sleep 30
      get_malware_response $1
   else
      break;
   fi
  done
  echo $response  > build/va-reports/malware-scan/malware-scan.json
else
  ERROR_MEASSAGE="Request to start scan failed"
  echo $ERROR_MEASSAGE
  echo $ERROR_MEASSAGE  > build/va-reports/malware-scan/malware-scan.json
  echo $HTTP_RESPONSE  >> build/va-reports/malware-scan/malware-scan.json
  exit 0
fi
